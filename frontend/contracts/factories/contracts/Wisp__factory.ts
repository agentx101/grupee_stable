/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Wisp, WispInterface } from "../../contracts/Wisp";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_levels",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "address",
        name: "_depositVerifier",
        type: "address",
      },
      {
        internalType: "address",
        name: "_transactionVerifier",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "publicKey",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "commitment",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encryptedData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "index",
        type: "uint32",
      },
    ],
    name: "Payment",
    type: "event",
  },
  {
    inputs: [],
    name: "FIELD_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_HISTORY_SIZE",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "commitment",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "publicKey",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "encryptedData",
        type: "bytes",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "depositVerifier",
    outputs: [
      {
        internalType: "contract IDepositVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hasher",
    outputs: [
      {
        internalType: "contract IPoseidonHasher",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "index",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "root",
        type: "uint256",
      },
    ],
    name: "isValidRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    name: "levelHashes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "levels",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSize",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "roots",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "spentNullifiers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokens",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
      {
        internalType: "uint256[2]",
        name: "nullifiers",
        type: "uint256[2]",
      },
      {
        internalType: "uint256",
        name: "root",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "withdrawnAmount",
        type: "uint256",
      },
      {
        internalType: "uint256[2]",
        name: "publicKeys",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2]",
        name: "commitments",
        type: "uint256[2]",
      },
      {
        internalType: "bytes[2]",
        name: "encryptedData",
        type: "bytes[2]",
      },
    ],
    name: "transaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "transactionVerifier",
    outputs: [
      {
        internalType: "contract ITransactionVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "i",
        type: "uint256",
      },
    ],
    name: "zeros",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x61010060405260008060016101000a81548163ffffffff021916908363ffffffff1602179055503480156200003357600080fd5b506040516200367738038062003677833981810160405281019062000059919062000b87565b848460008260ff1611620000a4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200009b9062000c8f565b60405180910390fd5b60208260ff1610620000ed576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000e49062000d27565b60405180910390fd5b816000806101000a81548160ff021916908360ff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505060008054906101000a900460ff16600262000157919062000edc565b63ffffffff1660a08163ffffffff168152505060005b8260ff168160ff161015620001c357620001908160ff16620002d860201b60201c565b600160008360ff1660ff168152602001908152602001600020819055508080620001ba9062000f11565b9150506200016d565b5050508273ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff16815250508173ffffffffffffffffffffffffffffffffffffffff1660e08173ffffffffffffffffffffffffffffffffffffffff168152505060005b81518160ff161015620002cc57600160036000848460ff16815181106200025d576200025c62000f3f565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508080620002c39062000f11565b91505062000231565b50505050505062000fe0565b60008082036200030b577f131d73cf6b30079aca0dff6a561cd0ee50b540879abe379a25a06b24bde2bebd905062000956565b600182036200033d577f030e41eb4c13eb3c7040201a76ec17a95b0696ae684c8711f643a82434043b85905062000956565b600282036200036f577f2de9e35e5e66734c46a160df81e56c83d8b7687ea37f6b4a27623a787127fad8905062000956565b60038203620003a1577f1ee3ac3d5ea557aa6d9a6ea46262dc42af62bae8c7864a9cc8dfb493d54bba30905062000956565b60048203620003d3577f0bef9271bdaa22ee892e75171bf1898983a6c8304ab78da111413a4105733219905062000956565b6005820362000405577f1b4bb8a6696efaa2cd20d4b47bf9dc585280dec286f06aedd01583a58c783f51905062000956565b6006820362000437577f2aabe03c18f20b72f67ade3063f12d71ad671d375d797ba60dfac9d924f02708905062000956565b6007820362000469577f2daff101798c30998276c67457a7baaaaed141e6e49a2310deb01a71e3ec107d905062000956565b600882036200049b577f1cafdb09713bb57e4aed4bee8f6d722a8e22c8ac51dafa7faf3b5585536b443e905062000956565b60098203620004cd577f1d585d8e6fa2b1698a000c733e3c2c8a6baaf40166f82ee0412a266496bab85f905062000956565b600a8203620004ff577f2fa8177393423a5b0e68dbb8a555a9085464b5fe55219d377edb5a9a486b4f16905062000956565b600b820362000531577f1e9dbba95cdde33d36bc0cee03f7ebeddd71cdc633451d996a9cb83bc4faccad905062000956565b600c820362000563577f0adacfac36026ca9936dd2e4d540a947a1a2cb2ce7114ddcb24a3956eae54880905062000956565b600d820362000595577f1b08cd6df6cbf993b04b8b2e40882ca9aa48ca3afb074b88e52963f1c63f534b905062000956565b600e8203620005c7577f086043d5906d53b339d340d39738f2037541c5440073a481feb8b1f513b1f61e905062000956565b600f8203620005f9577f06108b01607231776eb7debff2f99da31dd70f4bcbeccc251843de92456d9464905062000956565b601082036200062b577f10f9e234e1bb3ab0c5e979c489e0f82b08b74f4177a6fc85e08e5aac314de30e905062000956565b601182036200065d577f0432ad8ddfeffc1e806be483a4172fd3389aee0d322d5d0211da447be542dc1e905062000956565b601282036200068f577f06633a6d46c11662e3f69fcd309b73cc20bd47a870d778c20e661915874c2d30905062000956565b60138203620006c1577f01a45cc8ac3691a5cab011322c3768c87051c572235a0cca492dff6909612077905062000956565b60148203620006f3577f279add35717f68d654619ffb44243d67f2e1085ae096b87da5f4e03b12c0198f905062000956565b6015820362000725577f14abf2e9cc1540de67faffd47b74b2ff21db44fd5909c2c6dc0a7910183672d1905062000956565b6016820362000757577f014d77e356b2fc343bad244a2c7b82793b1d407624237045b8cdb73e58be4804905062000956565b6017820362000789577f10e949fa93056d968937b8b3990db726a22596ea35238a41af824cfa44d79309905062000956565b60188203620007bb577f19c69248dcc169fb60a3dc50f25cbcfeff75f9876e76a76c7cc3356eee4746ba905062000956565b60198203620007ed577f126f559140de04a5b3074e0ecbb46c942fbf0fc1118e4cab0e509ec7942acdf4905062000956565b601a82036200081f577f015a03f1243d220d72e914a76f815a66d0fae19bf83f7ed126124bb718b45638905062000956565b601b820362000851577f0d234d5a13d6451120bf427a97a64a01b86122bc7056c9db235b4708d6257fd9905062000956565b601c820362000883577f258f2eb745d4c7f43f7555fcd719408e4d484ed8ed1cf0a367410f24df079be0905062000956565b601d8203620008b5577f2a7a8cb5c71e208c985ef3da812d40201012fdb07883372822b0a5c8c5e46a6d905062000956565b601e8203620008e7577f02dfa7a6426b9c6700075ef9d9a2a964f9e54e5643c78b14a6fddcff44e81e41905062000956565b601f820362000919577f136e847efd90cf461eac4b58b7f0fde18cf8564730c0b56ee7919be0816679a5905062000956565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200094d9062000fbe565b60405180910390fd5b919050565b6000604051905090565b600080fd5b600080fd5b600060ff82169050919050565b62000987816200096f565b81146200099357600080fd5b50565b600081519050620009a7816200097c565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620009da82620009ad565b9050919050565b620009ec81620009cd565b8114620009f857600080fd5b50565b60008151905062000a0c81620009e1565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b62000a628262000a17565b810181811067ffffffffffffffff8211171562000a845762000a8362000a28565b5b80604052505050565b600062000a996200095b565b905062000aa7828262000a57565b919050565b600067ffffffffffffffff82111562000aca5762000ac962000a28565b5b602082029050602081019050919050565b600080fd5b600062000af762000af18462000aac565b62000a8d565b9050808382526020820190506020840283018581111562000b1d5762000b1c62000adb565b5b835b8181101562000b4a578062000b358882620009fb565b84526020840193505060208101905062000b1f565b5050509392505050565b600082601f83011262000b6c5762000b6b62000a12565b5b815162000b7e84826020860162000ae0565b91505092915050565b600080600080600060a0868803121562000ba65762000ba562000965565b5b600062000bb68882890162000996565b955050602062000bc988828901620009fb565b945050604062000bdc88828901620009fb565b935050606062000bef88828901620009fb565b925050608086015167ffffffffffffffff81111562000c135762000c126200096a565b5b62000c218882890162000b54565b9150509295509295909350565b600082825260208201905092915050565b7f5f6c6576656c732073686f756c642062652067726561746572207468616e2030600082015250565b600062000c7760208362000c2e565b915062000c848262000c3f565b602082019050919050565b6000602082019050818103600083015262000caa8162000c68565b9050919050565b7f5f6c6576656c732073686f756c64206e6f74206265206772656174657220746860008201527f616e203332000000000000000000000000000000000000000000000000000000602082015250565b600062000d0f60258362000c2e565b915062000d1c8262000cb1565b604082019050919050565b6000602082019050818103600083015262000d428162000d00565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b600185111562000dd75780860481111562000daf5762000dae62000d49565b5b600185161562000dbf5780820291505b808102905062000dcf8562000d78565b945062000d8f565b94509492505050565b60008262000df2576001905062000ec5565b8162000e02576000905062000ec5565b816001811462000e1b576002811462000e265762000e5c565b600191505062000ec5565b60ff84111562000e3b5762000e3a62000d49565b5b8360020a91508482111562000e555762000e5462000d49565b5b5062000ec5565b5060208310610133831016604e8410600b841016171562000e965782820a90508381111562000e905762000e8f62000d49565b5b62000ec5565b62000ea5848484600162000d85565b9250905081840481111562000ebf5762000ebe62000d49565b5b81810290505b9392505050565b600063ffffffff82169050919050565b600062000ee98262000ecc565b915062000ef6836200096f565b925062000f0963ffffffff848462000de0565b905092915050565b600062000f1e826200096f565b915060ff820362000f345762000f3362000d49565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f496e646578206f7574206f6620626f756e647300000000000000000000000000600082015250565b600062000fa660138362000c2e565b915062000fb38262000f6e565b602082019050919050565b6000602082019050818103600083015262000fd98162000f97565b9050919050565b60805160a05160c05160e051612641620010366000396000818161065d0152610c610152600081816103730152610a6f01526000818161034f015261134101526000818161131b01526114cd01526126416000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80639eaa51c511610097578063ce7597c911610066578063ce7597c91461029f578063e4860339146102cf578063e8295588146102ff578063ed33639f1461032f57610100565b80639eaa51c514610217578063a53d5c6314610233578063c2b40ae414610251578063cd87a3b41461028157610100565b8063414a37ba116100d3578063414a37ba1461018f5780634ecf518b146101ad578063811608fd146101cb5780638363df16146101fb57610100565b80632565b1591461010557806326120c88146101235780632986c0e5146101415780632cdabbce1461015f575b600080fd5b61010d61034d565b60405161011a9190611667565b60405180910390f35b61012b610371565b6040516101389190611701565b60405180910390f35b610149610395565b6040516101569190611667565b60405180910390f35b6101796004803603810190610174919061175c565b6103ab565b60405161018691906117a4565b60405180910390f35b610197610457565b6040516101a491906117ce565b60405180910390f35b6101b561047b565b6040516101c29190611805565b60405180910390f35b6101e560048036038101906101e0919061175c565b61048c565b6040516101f291906117a4565b60405180910390f35b61021560048036038101906102109190611907565b6104ac565b005b610231600480360381019061022c9190611a0f565b610997565b005b61023b610c5f565b6040516102489190611aff565b60405180910390f35b61026b6004803603810190610266919061175c565b610c83565b60405161027891906117ce565b60405180910390f35b610289610c9b565b6040516102969190611805565b60405180910390f35b6102b960048036038101906102b49190611b46565b610ca0565b6040516102c691906117ce565b60405180910390f35b6102e960048036038101906102e49190611b73565b610cb8565b6040516102f691906117a4565b60405180910390f35b6103196004803603810190610314919061175c565b610cd8565b60405161032691906117ce565b60405180910390f35b610337611319565b6040516103449190611bc1565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b600060019054906101000a900463ffffffff1681565b60008082036103bd5760009050610452565b6000601e60ff16600060019054906101000a900463ffffffff166103e19190611c0b565b905060008190505b83600260008363ffffffff168152602001908152602001600020540361041457600192505050610452565b60008163ffffffff160361042a57601e60ff1690505b808061043590611c6b565b9150508163ffffffff168163ffffffff16036103e9576000925050505b919050565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000181565b60008054906101000a900460ff1681565b60046020528060005260406000206000915054906101000a900460ff1681565b600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610538576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052f90611cf1565b60405180910390fd5b610541876103ab565b610580576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057790611d5d565b60405180910390fd5b60005b600281101561065a57600460008a83600281106105a3576105a2611d7d565b5b6020020135815260200190815260200160002060009054906101000a900460ff1615610604576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105fb90611df8565b60405180910390fd5b6001600460008b846002811061061d5761061c611d7d565b5b6020020135815260200190815260200160002060006101000a81548160ff021916908315150217905550808061065290611e18565b915050610583565b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663b03554cb8b8b6040518061014001604052808d6000600281106106b9576106b8611d7d565b5b602002013581526020018d6001600281106106d7576106d6611d7d565b5b60200201358152602001876000600281106106f5576106f4611d7d565b5b602002013581526020018760016002811061071357610712611d7d565b5b602002013581526020018a73ffffffffffffffffffffffffffffffffffffffff1681526020018c81526020018b73ffffffffffffffffffffffffffffffffffffffff1681526020018981526020018860006002811061077557610774611d7d565b5b602002013581526020018860016002811061079357610792611d7d565b5b60200201358152506040518463ffffffff1660e01b81526004016107b993929190611f69565b602060405180830381865afa1580156107d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107fa9190611fc8565b610839576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083090612041565b60405180910390fd5b8473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb87866040518363ffffffff1660e01b8152600401610874929190612070565b6020604051808303816000875af1158015610893573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b79190611fc8565b5060005b600281101561098a5760006108e68483600281106108dc576108db611d7d565b5b602002013561133d565b90507f1d9cdbb82f9b7828339f89da62e1a48207663efd781b35256fa36659957dde8085836002811061091c5761091b611d7d565b5b602002013585846002811061093457610933611d7d565b5b602002013585856002811061094c5761094b611d7d565b5b60200281019061095c91906120a8565b8560405161096e95949392919061210b565b60405180910390a150808061098290611e18565b9150506108bb565b5050505050505050505050565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610a23576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1a90611cf1565b60405180910390fd5b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018383604051610a56929190612189565b604051809103902060001c610a6b91906121a2565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16632be688d48a8a6040518060a001604052808c81526020018b81526020018a81526020018973ffffffffffffffffffffffffffffffffffffffff168152602001868152506040518463ffffffff1660e01b8152600401610b0693929190612257565b602060405180830381865afa158015610b23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b479190611fc8565b610b86576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7d906122d5565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff166323b872dd3330886040518463ffffffff1660e01b8152600401610bc3939291906122f5565b6020604051808303816000875af1158015610be2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c069190611fc8565b506000610c128861133d565b90507f1d9cdbb82f9b7828339f89da62e1a48207663efd781b35256fa36659957dde808789868685604051610c4b95949392919061210b565b60405180910390a150505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60026020528060005260406000206000915090505481565b601e81565b60016020528060005260406000206000915090505481565b60036020528060005260406000206000915054906101000a900460ff1681565b6000808203610d09577f131d73cf6b30079aca0dff6a561cd0ee50b540879abe379a25a06b24bde2bebd9050611314565b60018203610d39577f030e41eb4c13eb3c7040201a76ec17a95b0696ae684c8711f643a82434043b859050611314565b60028203610d69577f2de9e35e5e66734c46a160df81e56c83d8b7687ea37f6b4a27623a787127fad89050611314565b60038203610d99577f1ee3ac3d5ea557aa6d9a6ea46262dc42af62bae8c7864a9cc8dfb493d54bba309050611314565b60048203610dc9577f0bef9271bdaa22ee892e75171bf1898983a6c8304ab78da111413a41057332199050611314565b60058203610df9577f1b4bb8a6696efaa2cd20d4b47bf9dc585280dec286f06aedd01583a58c783f519050611314565b60068203610e29577f2aabe03c18f20b72f67ade3063f12d71ad671d375d797ba60dfac9d924f027089050611314565b60078203610e59577f2daff101798c30998276c67457a7baaaaed141e6e49a2310deb01a71e3ec107d9050611314565b60088203610e89577f1cafdb09713bb57e4aed4bee8f6d722a8e22c8ac51dafa7faf3b5585536b443e9050611314565b60098203610eb9577f1d585d8e6fa2b1698a000c733e3c2c8a6baaf40166f82ee0412a266496bab85f9050611314565b600a8203610ee9577f2fa8177393423a5b0e68dbb8a555a9085464b5fe55219d377edb5a9a486b4f169050611314565b600b8203610f19577f1e9dbba95cdde33d36bc0cee03f7ebeddd71cdc633451d996a9cb83bc4faccad9050611314565b600c8203610f49577f0adacfac36026ca9936dd2e4d540a947a1a2cb2ce7114ddcb24a3956eae548809050611314565b600d8203610f79577f1b08cd6df6cbf993b04b8b2e40882ca9aa48ca3afb074b88e52963f1c63f534b9050611314565b600e8203610fa9577f086043d5906d53b339d340d39738f2037541c5440073a481feb8b1f513b1f61e9050611314565b600f8203610fd9577f06108b01607231776eb7debff2f99da31dd70f4bcbeccc251843de92456d94649050611314565b60108203611009577f10f9e234e1bb3ab0c5e979c489e0f82b08b74f4177a6fc85e08e5aac314de30e9050611314565b60118203611039577f0432ad8ddfeffc1e806be483a4172fd3389aee0d322d5d0211da447be542dc1e9050611314565b60128203611069577f06633a6d46c11662e3f69fcd309b73cc20bd47a870d778c20e661915874c2d309050611314565b60138203611099577f01a45cc8ac3691a5cab011322c3768c87051c572235a0cca492dff69096120779050611314565b601482036110c9577f279add35717f68d654619ffb44243d67f2e1085ae096b87da5f4e03b12c0198f9050611314565b601582036110f9577f14abf2e9cc1540de67faffd47b74b2ff21db44fd5909c2c6dc0a7910183672d19050611314565b60168203611129577f014d77e356b2fc343bad244a2c7b82793b1d407624237045b8cdb73e58be48049050611314565b60178203611159577f10e949fa93056d968937b8b3990db726a22596ea35238a41af824cfa44d793099050611314565b60188203611189577f19c69248dcc169fb60a3dc50f25cbcfeff75f9876e76a76c7cc3356eee4746ba9050611314565b601982036111b9577f126f559140de04a5b3074e0ecbb46c942fbf0fc1118e4cab0e509ec7942acdf49050611314565b601a82036111e9577f015a03f1243d220d72e914a76f815a66d0fae19bf83f7ed126124bb718b456389050611314565b601b8203611219577f0d234d5a13d6451120bf427a97a64a01b86122bc7056c9db235b4708d6257fd99050611314565b601c8203611249577f258f2eb745d4c7f43f7555fcd719408e4d484ed8ed1cf0a367410f24df079be09050611314565b601d8203611279577f2a7a8cb5c71e208c985ef3da812d40201012fdb07883372822b0a5c8c5e46a6d9050611314565b601e82036112a9577f02dfa7a6426b9c6700075ef9d9a2a964f9e54e5643c78b14a6fddcff44e81e419050611314565b601f82036112d9577f136e847efd90cf461eac4b58b7f0fde18cf8564730c0b56ee7919be0816679a59050611314565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161130b90612378565b60405180910390fd5b919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60007f000000000000000000000000000000000000000000000000000000000000000063ffffffff16600060019054906101000a900463ffffffff1663ffffffff16036113bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113b6906123e4565b60405180910390fd5b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018210611421576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161141890612450565b60405180910390fd5b60008060019054906101000a900463ffffffff169050600083905060008060005b60008054906101000a900460ff1660ff168160ff16101561159d57600060028661146c9190611c0b565b63ffffffff16036114ab578392506114868160ff16610cd8565b915083600160008360ff1660ff168152602001908152602001600020819055506114cb565b600160008260ff1660ff1681526020019081526020016000205492508391505b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166329a5f2f66040518060400160405280868152602001858152506040518263ffffffff1660e01b815260040161153891906124f4565b602060405180830381865afa158015611555573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115799190612524565b93506002856115889190612551565b9450808061159590612582565b915050611442565b508260026000601e60ff16600060019054906101000a900463ffffffff166115c59190611c0b565b63ffffffff168152602001908152602001600020819055506000600181819054906101000a900463ffffffff16809291906115ff906125ab565b91906101000a81548163ffffffff021916908363ffffffff160217905550506001600060019054906101000a900463ffffffff1661163d91906125d7565b945050505050919050565b600063ffffffff82169050919050565b61166181611648565b82525050565b600060208201905061167c6000830184611658565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006116c76116c26116bd84611682565b6116a2565b611682565b9050919050565b60006116d9826116ac565b9050919050565b60006116eb826116ce565b9050919050565b6116fb816116e0565b82525050565b600060208201905061171660008301846116f2565b92915050565b600080fd5b600080fd5b6000819050919050565b61173981611726565b811461174457600080fd5b50565b60008135905061175681611730565b92915050565b6000602082840312156117725761177161171c565b5b600061178084828501611747565b91505092915050565b60008115159050919050565b61179e81611789565b82525050565b60006020820190506117b96000830184611795565b92915050565b6117c881611726565b82525050565b60006020820190506117e360008301846117bf565b92915050565b600060ff82169050919050565b6117ff816117e9565b82525050565b600060208201905061181a60008301846117f6565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261184557611844611820565b5b8235905067ffffffffffffffff81111561186257611861611825565b5b60208301915083600182028301111561187e5761187d61182a565b5b9250929050565b6000819050826020600202820111156118a1576118a061182a565b5b92915050565b60006118b282611682565b9050919050565b6118c2816118a7565b81146118cd57600080fd5b50565b6000813590506118df816118b9565b92915050565b6000819050826020600202820111156119015761190061182a565b5b92915050565b6000806000806000806000806000806101808b8d03121561192b5761192a61171c565b5b60008b013567ffffffffffffffff81111561194957611948611721565b5b6119558d828e0161182f565b9a509a505060206119688d828e01611885565b98505060606119798d828e01611747565b975050608061198a8d828e016118d0565b96505060a061199b8d828e016118d0565b95505060c06119ac8d828e01611747565b94505060e06119bd8d828e01611885565b9350506101206119cf8d828e01611885565b9250506101608b013567ffffffffffffffff8111156119f1576119f0611721565b5b6119fd8d828e016118e5565b9150509295989b9194979a5092959850565b60008060008060008060008060c0898b031215611a2f57611a2e61171c565b5b600089013567ffffffffffffffff811115611a4d57611a4c611721565b5b611a598b828c0161182f565b98509850506020611a6c8b828c01611747565b9650506040611a7d8b828c01611747565b9550506060611a8e8b828c01611747565b9450506080611a9f8b828c016118d0565b93505060a089013567ffffffffffffffff811115611ac057611abf611721565b5b611acc8b828c0161182f565b92509250509295985092959890939650565b6000611ae9826116ce565b9050919050565b611af981611ade565b82525050565b6000602082019050611b146000830184611af0565b92915050565b611b23816117e9565b8114611b2e57600080fd5b50565b600081359050611b4081611b1a565b92915050565b600060208284031215611b5c57611b5b61171c565b5b6000611b6a84828501611b31565b91505092915050565b600060208284031215611b8957611b8861171c565b5b6000611b97848285016118d0565b91505092915050565b6000611bab826116ce565b9050919050565b611bbb81611ba0565b82525050565b6000602082019050611bd66000830184611bb2565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611c1682611648565b9150611c2183611648565b925082611c3157611c30611bdc565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611c7682611648565b915060008203611c8957611c88611c3c565b5b600182039050919050565b600082825260208201905092915050565b7f546f6b656e206973206e6f7420737570706f7274656400000000000000000000600082015250565b6000611cdb601683611c94565b9150611ce682611ca5565b602082019050919050565b60006020820190508181036000830152611d0a81611cce565b9050919050565b7f526f6f74206973206e6f742076616c6964000000000000000000000000000000600082015250565b6000611d47601183611c94565b9150611d5282611d11565b602082019050919050565b60006020820190508181036000830152611d7681611d3a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e756c6c6966696572206973207370656e740000000000000000000000000000600082015250565b6000611de2601283611c94565b9150611ded82611dac565b602082019050919050565b60006020820190508181036000830152611e1181611dd5565b9050919050565b6000611e2382611726565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611e5557611e54611c3c565b5b600182019050919050565b600082825260208201905092915050565b82818337600083830152505050565b6000601f19601f8301169050919050565b6000611e9d8385611e60565b9350611eaa838584611e71565b611eb383611e80565b840190509392505050565b6000600a9050919050565b600081905092915050565b6000819050919050565b611ee781611726565b82525050565b6000611ef98383611ede565b60208301905092915050565b6000602082019050919050565b611f1b81611ebe565b611f258184611ec9565b9250611f3082611ed4565b8060005b83811015611f61578151611f488782611eed565b9650611f5383611f05565b925050600181019050611f34565b505050505050565b6000610160820190508181036000830152611f85818587611e91565b9050611f946020830184611f12565b949350505050565b611fa581611789565b8114611fb057600080fd5b50565b600081519050611fc281611f9c565b92915050565b600060208284031215611fde57611fdd61171c565b5b6000611fec84828501611fb3565b91505092915050565b7f5472616e73616374696f6e206973206e6f742076616c69640000000000000000600082015250565b600061202b601883611c94565b915061203682611ff5565b602082019050919050565b6000602082019050818103600083015261205a8161201e565b9050919050565b61206a816118a7565b82525050565b60006040820190506120856000830185612061565b61209260208301846117bf565b9392505050565b600080fd5b600080fd5b600080fd5b600080833560016020038436030381126120c5576120c4612099565b5b80840192508235915067ffffffffffffffff8211156120e7576120e661209e565b5b602083019250600182023603831315612103576121026120a3565b5b509250929050565b600060808201905061212060008301886117bf565b61212d60208301876117bf565b8181036040830152612140818587611e91565b905061214f6060830184611658565b9695505050505050565b600081905092915050565b60006121708385612159565b935061217d838584611e71565b82840190509392505050565b6000612196828486612164565b91508190509392505050565b60006121ad82611726565b91506121b883611726565b9250826121c8576121c7611bdc565b5b828206905092915050565b600060059050919050565b600081905092915050565b6000819050919050565b6000602082019050919050565b612209816121d3565b61221381846121de565b925061221e826121e9565b8060005b8381101561224f5781516122368782611eed565b9650612241836121f3565b925050600181019050612222565b505050505050565b600060c0820190508181036000830152612272818587611e91565b90506122816020830184612200565b949350505050565b7f4465706f736974206973206e6f742076616c6964000000000000000000000000600082015250565b60006122bf601483611c94565b91506122ca82612289565b602082019050919050565b600060208201905081810360008301526122ee816122b2565b9050919050565b600060608201905061230a6000830186612061565b6123176020830185612061565b61232460408301846117bf565b949350505050565b7f496e646578206f7574206f6620626f756e647300000000000000000000000000600082015250565b6000612362601383611c94565b915061236d8261232c565b602082019050919050565b6000602082019050818103600083015261239181612355565b9050919050565b7f4d65726b6c6520747265652069732066756c6c00000000000000000000000000600082015250565b60006123ce601383611c94565b91506123d982612398565b602082019050919050565b600060208201905081810360008301526123fd816123c1565b9050919050565b7f4c6561662068617320746f2062652077697468696e206669656c642073697a65600082015250565b600061243a602083611c94565b915061244582612404565b602082019050919050565b600060208201905081810360008301526124698161242d565b9050919050565b600060029050919050565b600081905092915050565b6000819050919050565b6000602082019050919050565b6124a681612470565b6124b0818461247b565b92506124bb82612486565b8060005b838110156124ec5781516124d38782611eed565b96506124de83612490565b9250506001810190506124bf565b505050505050565b6000604082019050612509600083018461249d565b92915050565b60008151905061251e81611730565b92915050565b60006020828403121561253a5761253961171c565b5b60006125488482850161250f565b91505092915050565b600061255c82611648565b915061256783611648565b92508261257757612576611bdc565b5b828204905092915050565b600061258d826117e9565b915060ff82036125a05761259f611c3c565b5b600182019050919050565b60006125b682611648565b915063ffffffff82036125cc576125cb611c3c565b5b600182019050919050565b60006125e282611648565b91506125ed83611648565b925082821015612600576125ff611c3c565b5b82820390509291505056fea2646970667358221220d082f3405a45bd75c262a4cc06472724eb28ed57062f2db4e57a63d00aed096764736f6c634300080d0033";

type WispConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WispConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Wisp__factory extends ContractFactory {
  constructor(...args: WispConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _levels: PromiseOrValue<BigNumberish>,
    _hasher: PromiseOrValue<string>,
    _depositVerifier: PromiseOrValue<string>,
    _transactionVerifier: PromiseOrValue<string>,
    _tokens: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Wisp> {
    return super.deploy(
      _levels,
      _hasher,
      _depositVerifier,
      _transactionVerifier,
      _tokens,
      overrides || {}
    ) as Promise<Wisp>;
  }
  override getDeployTransaction(
    _levels: PromiseOrValue<BigNumberish>,
    _hasher: PromiseOrValue<string>,
    _depositVerifier: PromiseOrValue<string>,
    _transactionVerifier: PromiseOrValue<string>,
    _tokens: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _levels,
      _hasher,
      _depositVerifier,
      _transactionVerifier,
      _tokens,
      overrides || {}
    );
  }
  override attach(address: string): Wisp {
    return super.attach(address) as Wisp;
  }
  override connect(signer: Signer): Wisp__factory {
    return super.connect(signer) as Wisp__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WispInterface {
    return new utils.Interface(_abi) as WispInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Wisp {
    return new Contract(address, _abi, signerOrProvider) as Wisp;
  }
}

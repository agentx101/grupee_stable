/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { WispToken, WispTokenInterface } from "../../contracts/WispToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600a81526020017f5769737020546f6b656e000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f5749535000000000000000000000000000000000000000000000000000000000815250816003908051906020019062000096929190620001a6565b508060049080519060200190620000af929190620001a6565b505050620000d2620000c6620000d860201b60201c565b620000e060201b60201c565b620002ba565b600033905090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b828054620001b49062000285565b90600052602060002090601f016020900481019282620001d8576000855562000224565b82601f10620001f357805160ff191683800117855562000224565b8280016001018555821562000224579182015b828111156200022357825182559160200191906001019062000206565b5b50905062000233919062000237565b5090565b5b808211156200025257600081600090555060010162000238565b5090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200029e57607f821691505b602082108103620002b457620002b362000256565b5b50919050565b61184180620002ca6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063715018a611610097578063a457c2d711610066578063a457c2d714610276578063a9059cbb146102a6578063dd62ed3e146102d6578063f2fde38b14610306576100f5565b8063715018a6146102145780638da5cb5b1461021e57806395d89b411461023c578063a0712d681461025a576100f5565b806323b872dd116100d357806323b872dd14610166578063313ce5671461019657806339509351146101b457806370a08231146101e4576100f5565b806306fdde03146100fa578063095ea7b31461011857806318160ddd14610148575b600080fd5b610102610322565b60405161010f9190610f3b565b60405180910390f35b610132600480360381019061012d9190610ff6565b6103b4565b60405161013f9190611051565b60405180910390f35b6101506103d7565b60405161015d919061107b565b60405180910390f35b610180600480360381019061017b9190611096565b6103e1565b60405161018d9190611051565b60405180910390f35b61019e610410565b6040516101ab9190611105565b60405180910390f35b6101ce60048036038101906101c99190610ff6565b610419565b6040516101db9190611051565b60405180910390f35b6101fe60048036038101906101f99190611120565b610450565b60405161020b919061107b565b60405180910390f35b61021c610498565b005b6102266104ac565b604051610233919061115c565b60405180910390f35b6102446104d6565b6040516102519190610f3b565b60405180910390f35b610274600480360381019061026f9190611177565b610568565b005b610290600480360381019061028b9190610ff6565b610575565b60405161029d9190611051565b60405180910390f35b6102c060048036038101906102bb9190610ff6565b6105ec565b6040516102cd9190611051565b60405180910390f35b6102f060048036038101906102eb91906111a4565b61060f565b6040516102fd919061107b565b60405180910390f35b610320600480360381019061031b9190611120565b610696565b005b60606003805461033190611213565b80601f016020809104026020016040519081016040528092919081815260200182805461035d90611213565b80156103aa5780601f1061037f576101008083540402835291602001916103aa565b820191906000526020600020905b81548152906001019060200180831161038d57829003601f168201915b5050505050905090565b6000806103bf610719565b90506103cc818585610721565b600191505092915050565b6000600254905090565b6000806103ec610719565b90506103f98582856108ea565b610404858585610976565b60019150509392505050565b60006012905090565b600080610424610719565b9050610445818585610436858961060f565b6104409190611273565b610721565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6104a0610bf5565b6104aa6000610c73565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546104e590611213565b80601f016020809104026020016040519081016040528092919081815260200182805461051190611213565b801561055e5780601f106105335761010080835404028352916020019161055e565b820191906000526020600020905b81548152906001019060200180831161054157829003601f168201915b5050505050905090565b6105723382610d39565b50565b600080610580610719565b9050600061058e828661060f565b9050838110156105d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ca9061133b565b60405180910390fd5b6105e08286868403610721565b60019250505092915050565b6000806105f7610719565b9050610604818585610976565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b61069e610bf5565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361070d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610704906113cd565b60405180910390fd5b61071681610c73565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610790576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107879061145f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f6906114f1565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516108dd919061107b565b60405180910390a3505050565b60006108f6848461060f565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146109705781811015610962576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109599061155d565b60405180910390fd5b61096f8484848403610721565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109dc906115ef565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a54576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4b90611681565b60405180910390fd5b610a5f838383610e98565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610ae5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610adc90611713565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b789190611273565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610bdc919061107b565b60405180910390a3610bef848484610e9d565b50505050565b610bfd610719565b73ffffffffffffffffffffffffffffffffffffffff16610c1b6104ac565b73ffffffffffffffffffffffffffffffffffffffff1614610c71576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c689061177f565b60405180910390fd5b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610da8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9f906117eb565b60405180910390fd5b610db460008383610e98565b8060026000828254610dc69190611273565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e1b9190611273565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610e80919061107b565b60405180910390a3610e9460008383610e9d565b5050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610edc578082015181840152602081019050610ec1565b83811115610eeb576000848401525b50505050565b6000601f19601f8301169050919050565b6000610f0d82610ea2565b610f178185610ead565b9350610f27818560208601610ebe565b610f3081610ef1565b840191505092915050565b60006020820190508181036000830152610f558184610f02565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f8d82610f62565b9050919050565b610f9d81610f82565b8114610fa857600080fd5b50565b600081359050610fba81610f94565b92915050565b6000819050919050565b610fd381610fc0565b8114610fde57600080fd5b50565b600081359050610ff081610fca565b92915050565b6000806040838503121561100d5761100c610f5d565b5b600061101b85828601610fab565b925050602061102c85828601610fe1565b9150509250929050565b60008115159050919050565b61104b81611036565b82525050565b60006020820190506110666000830184611042565b92915050565b61107581610fc0565b82525050565b6000602082019050611090600083018461106c565b92915050565b6000806000606084860312156110af576110ae610f5d565b5b60006110bd86828701610fab565b93505060206110ce86828701610fab565b92505060406110df86828701610fe1565b9150509250925092565b600060ff82169050919050565b6110ff816110e9565b82525050565b600060208201905061111a60008301846110f6565b92915050565b60006020828403121561113657611135610f5d565b5b600061114484828501610fab565b91505092915050565b61115681610f82565b82525050565b6000602082019050611171600083018461114d565b92915050565b60006020828403121561118d5761118c610f5d565b5b600061119b84828501610fe1565b91505092915050565b600080604083850312156111bb576111ba610f5d565b5b60006111c985828601610fab565b92505060206111da85828601610fab565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061122b57607f821691505b60208210810361123e5761123d6111e4565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061127e82610fc0565b915061128983610fc0565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156112be576112bd611244565b5b828201905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000611325602583610ead565b9150611330826112c9565b604082019050919050565b6000602082019050818103600083015261135481611318565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006113b7602683610ead565b91506113c28261135b565b604082019050919050565b600060208201905081810360008301526113e6816113aa565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611449602483610ead565b9150611454826113ed565b604082019050919050565b600060208201905081810360008301526114788161143c565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b60006114db602283610ead565b91506114e68261147f565b604082019050919050565b6000602082019050818103600083015261150a816114ce565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611547601d83610ead565b915061155282611511565b602082019050919050565b600060208201905081810360008301526115768161153a565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006115d9602583610ead565b91506115e48261157d565b604082019050919050565b60006020820190508181036000830152611608816115cc565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b600061166b602383610ead565b91506116768261160f565b604082019050919050565b6000602082019050818103600083015261169a8161165e565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006116fd602683610ead565b9150611708826116a1565b604082019050919050565b6000602082019050818103600083015261172c816116f0565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611769602083610ead565b915061177482611733565b602082019050919050565b600060208201905081810360008301526117988161175c565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b60006117d5601f83610ead565b91506117e08261179f565b602082019050919050565b60006020820190508181036000830152611804816117c8565b905091905056fea26469706673582212204effaacbe2f11898f926ab4a83754183650d74ecc179dd094c95f50aeabaa5ce64736f6c634300080d0033";

type WispTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WispTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WispToken__factory extends ContractFactory {
  constructor(...args: WispTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<WispToken> {
    return super.deploy(overrides || {}) as Promise<WispToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): WispToken {
    return super.attach(address) as WispToken;
  }
  override connect(signer: Signer): WispToken__factory {
    return super.connect(signer) as WispToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WispTokenInterface {
    return new utils.Interface(_abi) as WispTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WispToken {
    return new Contract(address, _abi, signerOrProvider) as WispToken;
  }
}
